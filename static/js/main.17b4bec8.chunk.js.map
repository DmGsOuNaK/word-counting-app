{"version":3,"sources":["WordCounter.js","App.js","reportWebVitals.js","index.js"],"names":["WordCounter","_useState","useState","_useState2","_slicedToArray","wordCount","setWordCount","React","createElement","placeholder","rows","onChange","e","words","target","value","trim","split","length","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wKAsBiBA,MApBjB,WAAuB,IAAAC,EACeC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAO9B,OACEI,IAAAC,cAAA,WACED,IAAAC,cAAA,YACEC,YAAY,qBACZC,KAAM,EACNC,SAVoB,SAACC,GACzB,IAAMC,EAAQD,EAAEE,OAAOC,MAAMC,OAAOC,MAAM,OAC1CX,EAAaO,EAAMK,WAUjBX,IAAAC,cAAA,SAAG,eAAaH,KCLTc,MATf,WACE,OACEZ,IAAAC,cAAA,OAAKY,UAAU,OACbb,IAAAC,cAAA,UAAI,qCACJD,IAAAC,cAACR,EAAW,QCKHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAZ,EAAA,GAAAa,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH9B,IAAAC,cAACD,IAAM+B,WAAU,KACf/B,IAAAC,cAACW,EAAG,QAORE","file":"static/js/main.17b4bec8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction WordCounter() {\n    const [wordCount, setWordCount] = useState(0);\n  \n    const handleInputChange = (e) => {\n      const words = e.target.value.trim().split(/\\s+/);\n      setWordCount(words.length);\n    };\n  \n    return (\n      <div>\n        <textarea\n          placeholder=\"Enter your text...\"\n          rows={5}\n          onChange={handleInputChange}\n        ></textarea>\n        <p>Word Count: {wordCount}</p>\n      </div>\n    );\n  }\n  \n  export default WordCounter;\n","import React from 'react';\nimport WordCounter from './WordCounter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Responsive Paragraph Word Counter</h1>\n      <WordCounter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}